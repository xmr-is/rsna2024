hydra:
  run:
    dir: ${directory.output_dir}/${hydra.job.name}/${hydra.job.override_dirname}
  sweep:
    dir: ${directory.output_dir}/${hydra.job.name}
    subdir: ${hydra.job.override_dirname}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - directory=local
    - split=fold_0,fold_1
    - batch_size=4
    - dataset.image_size=384
    - model.name=swin_base_patch4_window12_384
    - exp_name=hello
  job:
    name: train
    chdir: true
    override_dirname: batch_size=4,dataset.image_size=384,directory=local,exp_name=hello,model.name=swin_base_patch4_window12_384,split=fold_0,fold_1
    id: ???
    num: ???
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/markun/git/rsna2024/kaggle
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/markun/git/rsna2024/kaggle/run/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      split: fold_0
      model: convnextv2
      dataset: rsna24_v1
      common: label
      directory: local
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
exp_name: hello
debug: true
wandb: online
num_folds: 5
batch_size: 4
seed: 42
trainer:
  epochs: 3
  early_stopping_epochs: 3
  use_amp: true
  num_workers: os.cpu_count()
  grad_acc: 2
optimizer:
  name: AdamW
  lr: 0.0001
scheduler:
  name: CosineAnnealingWarmRestarts
  wd: 0.01
criterion:
  name: CrossEntropyLoss
  max_grad_norm: None
directory:
  base_dir: /Users/markun/git/rsna2024/kaggle/
  input_dir: /Users/markun/git/rsna2024/kaggle/data
  output_dir: /Users/markun/git/rsna2024/kaggle/outputs
  image_dir: /Users/markun/git/rsna2024/kaggle/data/cvt_png
  submission_dir: /Users/markun/git/rsna2024/kaggle/outputs
common:
  conditions:
  - Spinal Canal Stenosis
  - Left Neural Foraminal Narrowing
  - Right Neural Foraminal Narrowing
  - Left Subarticular Stenosis
  - Right Subarticular Stenosis
  levels:
  - L1/L2
  - L2/L3
  - L3/L4
  - L4/L5
  - L5/S1
  label2id:
    Normal/Mild: 0
    Moderate: 1
    Severe: 2
dataset:
  image_size: 384
  augmentation:
    apply_aug: true
    aug_prob: 0.75
model:
  name: swin_base_patch4_window12_384
  params:
    pretrained: true
    in_channels: 30
    num_labels: 25
    num_classes: 75
split:
  fold: 0
  train_study_id:
  - 4003253
  - 4646740
  - 7143189
  - 8785691
  - 10728036
  valid_study_id:
  - 63725508
  - 74294498
  - 74782131
  - 76438935
  - 97634230
  - 100206310
  - 107935613
  - 109454808
